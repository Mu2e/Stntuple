# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# STNTUPLE maker user FCL template - see read_reco.fcl
# p1 : generate, simulate, reconstruct, stntuple
# p2 : read, reconstruct, stntuple
# p3 : old reco path: TPR and CPR reconstruction paths fully separated
# p4 : read, filter, reconstruct, display
# p5 : read, filter, reconstruct
# p6 : read, filter, display
#
# variables defined in the following PROLOG can be redefined in the top-level
# job configuration file using "@protect_ignore:" FCL construct
#
# GEN_ID needs to be redefined once again in the job top-level FCL file, as it 
#        is set to "CeEndpoint" in EventGenerator/fcl/prolog.fcl
#------------------------------------------------------------------------------
BEGIN_PROLOG
  bgHitFiles          : @nil
  INPUT_MODULE        : EmptyEvent
  TRIGGER_PATH        : []
  OUTPUT_PATH         : [ stntuple_p0 ]
  PROCESS_NAME        : Stnmaker
  BLIND_TIME          : 500                                  # default
  STN_VDHITS_COLL_TAG : "compressDigiMCs:virtualdetector"
  PDG_ID              : 0                                    # 0: ignore PDG_ID
  GEN_ID              : "unknown"                            #    ignore GEN_ID check
END_PROLOG

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"

#include "Production/JobConfig/reco/prolog.fcl"
#include "Offline/TrkDiag/fcl/prolog.fcl"

#include "Offline/TrkPatRec/fcl/prolog_trigger.fcl"
#include "Offline/CalPatRec/fcl/prolog_trigger.fcl"
#include "Offline/CaloReco/fcl/prolog_trigger.fcl"
#include "Offline/CaloCluster/fcl/prolog_trigger.fcl"
#include "Offline/TrkHitReco/fcl/prolog_trigger.fcl"
#include "Offline/TrkReco/fcl/prolog_trigger.fcl"
#include "Offline/TrkFilters/fcl/prolog_trigger.fcl"
#include "Offline/CaloFilters/fcl/prolog_trigger.fcl"

#include "Offline/ProditionsService/fcl/prolog.fcl"

#include "Stntuple/fcl/prolog.fcl"

#------------------------------------------------------------------------------
# templates: do not include prologs, 
# define table and sequence templates combining information from multiples packages
# services are initialized in Stntuple/fcl/stntuple_templates.fcl
#------------------------------------------------------------------------------
Services.SimAndReco.SeedService.baseSeed          :  8
Services.SimAndReco.SeedService.maxUniqueEngines  :  100


#include "Stntuple/fcl/trigger_templates.fcl"
# # onclude "Stntuple/fcl/mixing_templates.fcl"
#include "Stntuple/fcl/production_templates.fcl"
#include "Stntuple/fcl/stntuple_templates.fcl"

Stntuple.outputs      : { @table::production.outputs   }

Stntuple.physics : {
    producers: { @table::Stntuple.producers }
    filters  : { @table::Stntuple.filters   }
    analyzers: { @table::Stntuple.analyzers }
#------------------------------------------------------------------------------
# add trigger paths 
#------------------------------------------------------------------------------
    @table::Stntuple.paths
#------------------------------------------------------------------------------
# final part
#------------------------------------------------------------------------------
    trigger_paths : [ @sequence::TRIGGER_PATHS ]

    output_path   : [ @sequence::OUTPUT_PATH   ]
    end_paths     : [ output_path              ]
}
#------------------------------------------------------------------------------
# output file names 
#------------------------------------------------------------------------------
services.TFileService.fileName            : "nts..stnmaker.xxx.000000_00000000.root"
outputs.defaultOutput.fileName            : "sim._USER_.stnmaker.xxx.000001.art"
#------------------------------------------------------------------------------
# this is it
#------------------------------------------------------------------------------
