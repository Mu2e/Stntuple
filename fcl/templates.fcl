# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# defines templates
#------------------------------------------------------------------------------
BEGIN_PROLOG
#------------------------------------------------------------------------------
# declarations of sequences do not require the sequence elements to be defined
#------------------------------------------------------------------------------
  timeMapSeq    : [ protonTimeMap, muonTimeMap ]

  generatorSeq  : [ generate, g4run, detectorFilter, @sequence::timeMapSeq ]

  gen_mix_seq   : [ generate, g4run, detectorFilter
		    , dioMixer, protonMixer, neutronMixer, photonMixer, ootMixer, flashMixer
		    , @sequence::timeMapSeq ]

  mix_seq       : [ dioMixer, protonMixer, neutronMixer, photonMixer, ootMixer, flashMixer
		    , @sequence::timeMapSeq ]

  hitMakerSeq   : [ CaloShowerStepFromStepPt, CaloShowerStepROFromShowerStep, CaloDigiFromShower,
		    CaloRecoDigiFromDigi ,CaloCrystalHitFromHit, makeSD, makeSH ]

  digiMakerSeq  : [ CaloShowerStepFromStepPt, CaloShowerStepROFromShowerStep, CaloDigiFromShower, 
		    CaloRecoDigiFromDigi ,CaloCrystalHitFromHit, 
		    makeSD, makeSH ]
 
# MC generator and hit makers

  gen_hits_seq  : [ @sequence::generatorSeq, @sequence::hitMakerSeq ]

# calorimeter cluster reconstruction
  calRecoSeq    : [ CaloProtoClusterFromCrystalHit, CaloClusterFromProtoCluster ]

# hit pre-making for TrkPatRec; FSHPreStereo is needed to flag straw hits
  tprPrepHitSeq : [ FSHPreStereo, MakeStrawHitPositions, MakeStereoHits, FlagStrawHits, FlagBkgHits ]

# CalPatRec
  cprPrepHitSeq : [ CalPatRecFSHP, CalPatRecMakeStrawHitPositions, CalPatRecMakeStereoHits,  
		    CalPatRecFlagStrawHits, CalPatRecFlagBkgHits ]

  trkPatRecSeq     : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder, KSFDeM, 
		       KFFDeM, MergePatRec    ]

  calPatRecSeq     : [ @sequence::cprPrepHitSeq, CalPatRec   , MergePatRec    ]

  allPatRecSeq     : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder, KSFDeM, 
		       KFFDeM, @sequence::cprPrepHitSeq, CalPatRec, MergePatRec ]

  # allPatRecNewSeq  : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder, KSFDeM, 
  # 		       KFFDeM, @sequence::cprPrepHitSeq, 
  # 		       CalTimePeakFinder, CalPatRecNew, CalSeedFit, CalTrkFit,
  # 		       MergePatRec ]
  allPatRecNewSeq  : [ TimeClusterFinder, PosHelixFinder, KSFDeM, 
		       KFFDeM,
		       CalTimePeakFinder, CalHelixFinder, CalSeedFit, CalTrkFit,
		       MergePatRec, MergeHelixFinder ]
  
  allHelixSearchSeq  : [ TimeClusterFinder, PosHelixFinder, 
			  CalTimePeakFinder, CalHelixFinder, 
			  MergeHelixFinder ]

  trkPatRecDemSeq  : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder, KSFDeM, 
		       KFFDeM , MergePatRecDem ]
  trkPatRecDmmSeq  : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder, KSFDeM, 
		       KFFDeM, MergePatRecDmm ]

  calPatRecDemSeq  : [ @sequence::cprPrepHitSeq, CalPatRecDem, MergePatRecDem ]


# event for the downstream particles, avikPID requires running both electron and muon track reconstruction 
# hit making - just once, but two modules

  allPatRecDemSeq     : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder,  KSFDeM, 
			  KFFDeM, 
			  @sequence::cprPrepHitSeq, CalPatRecDem, 
			  MergePatRecDem ]

  allPatRecDmmSeq     : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder,  KSFDeM, 
			  KFFDeM,
			  @sequence::cprPrepHitSeq, CalPatRecDmm, 
			  MergePatRecDmm ]
#------------------------------------------------------------------------------
# downstream electron and muon reconstructon together
#------------------------------------------------------------------------------
  trkPatRecDemDmmSeq  : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder, 
			  KSFDeM, KFFDeM, KSFDmuM, KFFDmuM, 
			  MergePatRecDem, MergePatRecDmm ]

  calPatRecDemDmmSeq  : [ @sequence::cprPrepHitSeq, 
			  CalPatRecDem, CalPatRecDmm, 
			  MergePatRecDem, MergePatRecDmm ]

  allPatRecDemDmmSeq  : [ @sequence::tprPrepHitSeq, TimeClusterFinder, PosHelixFinder,  
			  KSFDeM, KFFDeM, KSFDmuM, KFFDmuM, 
			  @sequence::cprPrepHitSeq, CalPatRecDem, CalPatRecDmm, 
			  MergePatRecDem, MergePatRecDmm ]
#------------------------------------------------------------------------------
# extrapolation and matching
#------------------------------------------------------------------------------
  trkCaloMatchingSeq       : [ TrackCaloIntersection   , TrackCaloMatching    ]
  trkCaloMatchingDemSeq    : [ TrackCaloIntersectionDem, TrackCaloMatchingDem ]
  trkCaloMatchingDmmSeq    : [ TrackCaloIntersectionDmm, TrackCaloMatchingDmm ]
  trkCaloMatchingDemDmmSeq : [ TrackCaloIntersectionDem, TrackCaloMatchingDem, TrackCaloIntersectionDmm, TrackCaloMatchingDmm ]

  trkCaloMatchingTprSeq    : [ TrackCaloIntersectionTpr, TrackCaloMatchingTpr ]
  trkCaloMatchingCprSeq    : [ TrackCaloIntersectionCpr, TrackCaloMatchingCpr ]

#------------------------------------------------------------------------------
# particle identification
# AvikPID on input takes MergePatRecDem and MergePatRecDmm
#------------------------------------------------------------------------------
  vadimPidSeq   : [ TrackCaloIntersection, TrackCaloMatching, ParticleID ]

  avikPidSeq    : [ TrackCaloIntersectionDem, TrackCaloIntersectionDmm, TrackCaloMatchingDem, TrackCaloMatchingDmm, AvikPID ]

  pidSeq        : [ @sequence::avikPidSeq ]

  stnmaker_seq           : [ InitStntuple, StntupleMaker      , FillStntuple ]
  stnmaker_dem_seq       : [ InitStntuple, StntupleMakerDem   , FillStntuple ]
  stnmaker_dmm_seq       : [ InitStntuple, StntupleMakerDmm   , FillStntuple ]
  stnmaker_dem_dmm_seq   : [ InitStntuple, StntupleMakerDemDmm, FillStntuple ]

  stnmaker3_seq          : [ InitStntuple, StntupleMakerTcm     , FillStntuple ]
#------------------------------------------------------------------------------
# *** path sequences
#------------------------------------------------------------------------------
  hits_calo_apr_stnmaker_seq : [ @sequence::timeMapSeq, @sequence::hitMakerSeq, 
				 @sequence::calRecoSeq, 
				 @sequence::allPatRecSeq,
				 @sequence::trkCaloMatchingSeq,
#				 AvikPID, 
				 @sequence::stnmaker_seq ]

  hits_calo_tprdem_stnmaker_seq : [ @sequence::timeMapSeq, @sequence::hitMakerSeq, 
				    @sequence::calRecoSeq, 
				    @sequence::trkPatRecDemSeq,
				    @sequence::trkCaloMatchingDemSeq,
				    #				      AvikPID, 
				    @sequence::stnmaker_dem_seq ]
#------------------------------------------------------------------------------
# run full reconstruction on the data coming from the input file
#------------------------------------------------------------------------------
  path_calo_apr_vpid_stnm :       [ @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				    @sequence::trkCaloMatchingSeq,
				    ParticleID, 
				    @sequence::stnmaker_seq ]
#------------------------------------------------------------------------------
# generate signal, run full reconstruction
#------------------------------------------------------------------------------
  path_gen_hits_calo_apr_vpid_stnm : [ @sequence::generatorSeq, @sequence::hitMakerSeq ,
				       @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				       @sequence::trkCaloMatchingSeq,
				       ParticleID, 
				       @sequence::stnmaker_seq ]
#------------------------------------------------------------------------------
# do track-to-calo matching for each branch separately
#------------------------------------------------------------------------------
  path_gen_hits_calo_apr_vpid_stnm3 : [ @sequence::generatorSeq, @sequence::hitMakerSeq ,
					@sequence::calRecoSeq  , @sequence::allPatRecSeq, 
					MergePatRecTpr,
					MergePatRecCpr,
					@sequence::trkCaloMatchingSeq,
					@sequence::trkCaloMatchingTprSeq,
					@sequence::trkCaloMatchingCprSeq,
					ParticleID, 
					@sequence::stnmaker3_seq ]


path_mix_hits_calo_apr_vpid_stnm3 : [ @sequence::gen_mix_seq     , @sequence::hitMakerSeq ,
					@sequence::calRecoSeq  , @sequence::allPatRecSeq,
					MergePatRecTpr,
					MergePatRecCpr,
					@sequence::trkCaloMatchingSeq,
					@sequence::trkCaloMatchingTprSeq,
					@sequence::trkCaloMatchingCprSeq,
					ParticleID, 
					@sequence::stnmaker3_seq ]
#------------------------------------------------------------------------------
# read signal files and run full reconstruction
#------------------------------------------------------------------------------
  path_hits_calo_apr_vpid_stnm     : [ @sequence::timeMapSeq  , @sequence::hitMakerSeq ,
				       @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				       @sequence::trkCaloMatchingSeq,
				       ParticleID, 
				       @sequence::stnmaker_seq ]

  path_calo_apr_vpid_stnm          : [ @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				       @sequence::trkCaloMatchingSeq,
				       ParticleID, 
				       @sequence::stnmaker_seq ]
#------------------------------------------------------------------------------
# read both signal and background files, mix, run full reconstruction
#------------------------------------------------------------------------------
  path_mix_hits_calo_apr_vpid_stnm : [ @sequence::mix_seq     , @sequence::hitMakerSeq ,
				       @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				       @sequence::trkCaloMatchingSeq,
				       ParticleID, 
				       @sequence::stnmaker_seq ]

  path_mix_hits_calo_apr_vpid_display : [ @sequence::mix_seq     , @sequence::hitMakerSeq ,
					  @sequence::calRecoSeq  , @sequence::allPatRecSeq,
					  @sequence::trkCaloMatchingSeq,
					  ParticleID, 
					  MuHitDisplay ]
#------------------------------------------------------------------------------
# generate signal, read background files, mix, run full reconstruction
#------------------------------------------------------------------------------
  path_gen_mix_hits                    : [ @sequence::gen_mix_seq , @sequence::hitMakerSeq ]

  path_gen_mix_hits_calo_apr_vpid_stnm : [ @sequence::gen_mix_seq , @sequence::hitMakerSeq ,
					   @sequence::calRecoSeq  , @sequence::allPatRecSeq,
					   @sequence::trkCaloMatchingSeq,
					   ParticleID, 
					   @sequence::stnmaker_seq ]

  path_gen_mix_hits_calo_apr_vpid_display : [ @sequence::gen_mix_seq , @sequence::hitMakerSeq ,
					   @sequence::calRecoSeq  , @sequence::allPatRecSeq,
					   @sequence::trkCaloMatchingSeq,
					   ParticleID, 
					   MuHitDisplay]

  trkpatrec_dem_reco_stnmaker_seq : [ @sequence::calRecoSeq, 
				      @sequence::trkPatRecDemSeq,
				      @sequence::trkCaloMatchingDemSeq,
#				      AvikPID, 
				      @sequence::stnmaker_dem_seq ]

  calpatrec_dem_reco_stnmaker_seq : [ @sequence::calRecoSeq, @sequence::calPatRecDemSeq,
				      @sequence::trkPatRecDemSeq,
#				      AvikPID, 
				      @sequence::stnmaker_dem_seq ]

  allpatrec_dem_reco_stnmaker_seq : [ @sequence::calRecoSeq, @sequence::allPatRecDemSeq,
				      @sequence::trkCaloMatchingDemSeq,
#				      ParticleIDDem,
#				      AvikPID,
				      @sequence::stnmaker_dem_seq ]
#------------------------------------------------------------------------------
  trkpatrec_dem_dmm_reco_stnmaker_seq : [ @sequence::calRecoSeq, @sequence::trkPatRecDemDmmSeq,
					  @sequence::avikPidSeq, @sequence::stnmaker_dem_dmm_seq ]

  calpatrec_dem_dmm_reco_stnmaker_seq : [ @sequence::calRecoSeq, @sequence::calPatRecDemDmmSeq,
					  @sequence::avikPidSeq, @sequence::stnmaker_dem_dmm_seq ]

  allpatrec_dem_dmm_reco_stnmaker_seq : [ @sequence::calRecoSeq, @sequence::allPatRecDemDmmSeq,
#					  @sequence::avikPidSeq, 
					  @sequence::stnmaker_dem_dmm_seq ]
#------------------------------------------------------------------------------
  gen_allpatrec_dem_dmm_reco_stnmaker_seq : [ @sequence::generatorSeq, @sequence::hitMakerSeq       ,
					      @sequence::allpatrec_dem_dmm_reco_stnmaker_seq ]

  genmix_allpatrec_dem_dmm_reco_stnmaker_seq : [ @sequence::gen_mix_seq , @sequence::hitMakerSeq       ,
						 @sequence::allpatrec_dem_dmm_reco_stnmaker_seq ]
END_PROLOG
#------------------------------------------------------------------------------
# input module definition
#------------------------------------------------------------------------------
source : { 
    # module_type : EmptyEvent
    module_type : RootInput
    #    fileNames   : [ {INPUT_DATA_FILE} ]
    #    fileNames : ["/mu2e/data/tdr/beam/g4s4p5/tdr.beam.g4s4.conversion.1504a.15729672/good/00000/dsStopsToHitsConversion.root"]
    #    maxEvents   : 100
    inputCommands : ['keep *_*_*_*'
    #		     , 'drop *_muonTimeMap_*_*'
    #		     , 'drop *_protonTimeMap_*_*'
    #		     , 'drop mu2eStrawDigis_*_*_*'
    #		     , 'drop mu2eStrawHits_*_*_*'
    #		     , 'drop *_CaloReadoutHitsMaker_*_*'
    #		     , 'drop *_CaloCrystalHitsMaker_*_*'
    # Uncomment the above lines to reduce file size.
		    ]
}
#------------------------------------------------------------------------------
# services section
#------------------------------------------------------------------------------
services : {
    message               : @local::default_message
    TFileService          : { fileName : "Stntuple_fcl_templates_fcl.hist" }
    RandomNumberGenerator : { }
    #   Timing                : { }fcl/

    GeometryService        : { inputFile      : "JobConfig/cd3/geom_baseline.txt"      }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"        }
    GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"   }
    BTrkHelper             : @local::BTrkHelperDefault
    G4Helper               : { }
    SeedService            : { @table::automaticSeeds
	baseSeed         :  0
	maxUniqueEngines :  20
    }
}
services.scheduler.wantSummary: true
#------------------------------------------------------------------------------
# reconstruction and analysis modules
#------------------------------------------------------------------------------
Stntuple : { @table::Stntuple  # defined in Stntuple/fcl/prolog.fcl
    producers : { @table::Stntuple.producers 
#------------------------------------------------------------------------------
# all Stntuple modules are filters, they are defined in Stntuple/fcl/prolog.fcl
# add modules defined in other packages
#------------------------------------------------------------------------------
        generate             : { @table::StoppedMuonConversionGun }
	g4run                : { @table::mu2eg4runDefaultSingleStage }
	@table::EventMixing.producers 

  	egun : { @table::StoppedParticleReactionGun # p(e)=105 MeV/c
	    physics : {
		pdgId            :  11
		elow             : 105.0010
		ehi              : 105.0015
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	}

  	mgun : { @table::StoppedParticleReactionGun # p(mu)=105 MeV/c
	    physics : {
		pdgId            :  13
		elow             : 148.9583      
		ehi              : 148.9585
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	}

  	pgun : { @table::StoppedParticleReactionGun # p(proton)=105 MeV/c
	    physics : {
		pdgId            : 2212
		elow             : 943.3154297476534
		ehi              : 944.4278691355946
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	}
#------------------------------------------------------------------------------
# hit makers
#------------------------------------------------------------------------------
        protonTimeMap          : { @table::protonTimeMap          }
        muonTimeMap            : { @table::muonTimeMap            }
        makeSD                 : { @table::makeSD                 }
        makeSH                 : { @table::makeSHfromSD           }

#------------------------------------------------------------------------------
# calorimeter digi maker
#------------------------------------------------------------------------------
	CaloShowerStepFromStepPt          :{ @table::CaloShowerStepFromStepPt}
	CaloShowerStepROFromShowerStep    :{ @table::CaloShowerStepROFromShowerStep}
	CaloDigiFromShower                :{ @table::CaloDigiFromShower}

	CaloRecoDigiFromDigi              :{ @table::CaloRecoDigiFromDigi}
	CaloCrystalHitFromHit             :{ @table::CaloCrystalHitFromHit}

#------------------------------------------------------------------------------
# TrkPatRec and CalPatRec modules
#------------------------------------------------------------------------------
	@table::Tracking.producers      # defined in TrkPatRec
	@table::CaloCluster.producers   # defined in CaloCluster
	@table::CalPatRec.producers
	@table::TrackCaloMatching.producers
	@table::ParticleID.producers
    }

    filters : { @table::Stntuple.filters
#------------------------------------------------------------------------------
# event mixing modules - all clones of the same module.
# each clone takes certain collections from the input file and adds them to the event
#------------------------------------------------------------------------------
#	@table::EventMixing.filters
        flashMixer           : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail: { @table::mixerTemplate.detail g4ModuleLabel:flashMixer genModuleLabel:flashMixer }
	}
	ootMixer             : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail: { @table::mixerTemplate.detail g4ModuleLabel:ootMixer   genModuleLabel:ootMixer   }
	}
	dioMixer             : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail: { @table::mixerTemplate.detail g4ModuleLabel:dioMixer   genModuleLabel:dioMixer   }
	}
	neutronMixer         : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail: { @table::mixerTemplate.detail g4ModuleLabel:neutronMixer genModuleLabel:neutronMixer }
	}
	photonMixer          : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail: { @table::mixerTemplate.detail g4ModuleLabel:photonMixer genModuleLabel:photonMixer }
	}
	protonMixer          : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail: { @table::mixerTemplate.detail g4ModuleLabel:protonMixer genModuleLabel:protonMixer }
	}
#------------------------------------------------------------------------------
# Andrej's filter
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
	detectorFilter : { @table::FilterStepPointMomentum }

	@table::CalPatRec.filters
    }

    outputs: {
	detectorOutput : {
	    module_type : RootOutput
	    SelectEvents: { SelectEvents: [] }
	    outputCommands:   [ "keep *_*_*_*"]
	}
    }
}

#------------------------------------------------------------------------------
# sequences: can't define recursively within one namespace
#------------------------------------------------------------------------------
Stntuple.gen_g4              : [ generate, g4run, detectorFilter]
Stntuple.gen_g4_time_map     : [ @sequence::Stntuple.gen_g4, @sequence::EventMixing.TimeMaps ]
Stntuple.mix                 : [ dioMixer, protonMixer, neutronMixer, photonMixer, ootMixer, flashMixer ]
Stntuple.mix_time_map        : [ @sequence::Stntuple.mix, @sequence::EventMixing.TimeMaps ]
Stntuple.gen_g4_mix_time_map : [ @sequence::Stntuple.gen_g4, @sequence::Stntuple.mix, @sequence::EventMixing.TimeMaps ]
Stntuple.digis               : [ @sequence::CaloDigiMC.DigiSim, @sequence::Tracking.DigiSim ]

Stntuple.cal_reco        : [ CaloRecoDigiFromDigi ,CaloCrystalHitFromHit, 
			     CaloProtoClusterFromCrystalHit, CaloClusterFromProtoCluster ]

Stntuple.cpr_reco        : [ @sequence::CalPatRec.reco, 
			     MergePatRecCpr,
			     @sequence::TrackCaloMatching.matching_cpr ]

Stntuple.tpr_reco        : [ @sequence::Tracking.TPRDeM , 
			     MergePatRecTpr, 
			     @sequence::TrackCaloMatching.matching_tpr ]

Stntuple.mpr_reco        : [ @sequence::Tracking.TPRDeM , 
			     @sequence::CalPatRec.reco, 
			     MergePatRec, 
			     @sequence::TrackCaloMatching.matching ]

Stntuple.dem_reco        : [ @sequence::Tracking.TPRDeM , @sequence::CalPatRec.dem_reco, MergePatRecDem, 
			     @sequence::TrackCaloMatching.matching_dem, AvikPIDNewDem ]

Stntuple.dmm_reco        : [ @sequence::Tracking.TPRDeM, @sequence::CalPatRec.dmm_reco, MergePatRecDmm, 
			     @sequence::TrackCaloMatching.matching_dmm, AvikPIDNewDmm ]

Stntuple.dep_reco        : [ @sequence::Tracking.TPRDeP  , @sequence::CalPatRec.dep_reco, MergePatRecDep, 
			     @sequence::TrackCaloMatching.matching_dep, AvikPIDNewDep ]

Stntuple.dmp_reco        : [ @sequence::Tracking.TPRDeP , @sequence::CalPatRec.dmp_reco, MergePatRecDmp, 
			     @sequence::TrackCaloMatching.matching_dmp, AvikPIDNewDmp ]
#----------------------------------------------------------------------------------------------------
# CalPatRec is not used for upstream reconstruction
#----------------------------------------------------------------------------------------------------
Stntuple.uem_reco : [ @sequence::Tracking.TPRUeM  , MergePatRecUem, @sequence::TrackCaloMatching.matching_uem, AvikPIDNewUem ]
Stntuple.umm_reco : [ @sequence::Tracking.TPRUeM , MergePatRecUmm, @sequence::TrackCaloMatching.matching_umm, AvikPIDNewUmm ]
Stntuple.uep_reco : [ @sequence::Tracking.TPRUeP   , MergePatRecUep, @sequence::TrackCaloMatching.matching_uep, AvikPIDNewUep ]
Stntuple.ump_reco : [ @sequence::Tracking.TPRUmuP  , MergePatRecUmp, @sequence::TrackCaloMatching.matching_ump, AvikPIDNewUmp ]

Stntuple.paths : {

    path_gen_digi_tcm_reco_stn : [ @sequence::Stntuple.gen_g4_time_map,
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       ,
				   @sequence::Stntuple.tpr_reco       ,
				   @sequence::Stntuple.cpr_reco       ,
				   @sequence::Stntuple.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
    
    path_gen_digi_reco_stn_dem : [ @sequence::Stntuple.gen_g4_time_map,
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       ,
				   @sequence::Stntuple.dem_reco       ,
				   @sequence::Stntuple.stnmaker_dem
				  ]
    
    path_gen_digi_reco_stn_dmm : [ @sequence::Stntuple.gen_g4_time_map,
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       ,
				   @sequence::Stntuple.dmm_reco       ,
				   @sequence::Stntuple.stnmaker_dmm
				  ]

    path_gen_digi_reco_stn_uep : [ @sequence::Stntuple.gen_g4_time_map,
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       ,
				   @sequence::Stntuple.uep_reco       ,
				   @sequence::Stntuple.stnmaker
				  ]

    path_gen_digi_reco_stn_ump : [ @sequence::Stntuple.gen_g4_time_map,
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       ,
				   @sequence::Stntuple.ump_reco       ,
				   @sequence::Stntuple.stnmaker
				  ]

    path_gen_digi_reco_stn_dem_dmm : [ @sequence::Stntuple.gen_g4_time_map,
				       @sequence::Stntuple.digis          ,
				       @sequence::Stntuple.cal_reco       ,
				       @sequence::Stntuple.dem_reco       ,
				       @sequence::Stntuple.dmm_reco       ,
				       @sequence::Stntuple.stnmaker_dem_dmm
				      ]

    path_gen_digi_reco_stn_dem_umm : [ @sequence::Stntuple.gen_g4_time_map,
				       @sequence::Stntuple.digis          ,
				       @sequence::Stntuple.cal_reco       ,
				       @sequence::Stntuple.dem_reco       ,
				       @sequence::Stntuple.umm_reco       ,
				       @sequence::Stntuple.stnmaker_dem_umm
				      ]
    
    path_gen_digi_reco_stn_dem_ump : [ @sequence::Stntuple.gen_g4_time_map,
				       @sequence::Stntuple.digis          ,
				       @sequence::Stntuple.cal_reco       ,
				       @sequence::Stntuple.dem_reco       ,
				       @sequence::Stntuple.ump_reco       ,
				       @sequence::Stntuple.stnmaker_dem_ump
				      ]

    path_gen_digi_reco_stn_dem_dmp_ump : [ @sequence::Stntuple.gen_g4_time_map,
					   @sequence::Stntuple.digis          ,
					   @sequence::Stntuple.cal_reco       ,
					   @sequence::Stntuple.dem_reco       ,
					   @sequence::Stntuple.dmp_reco       ,
					   @sequence::Stntuple.ump_reco       ,
					   @sequence::Stntuple.stnmaker
					  ]

    path_gen_digi_reco_stn_dem_dmm_umm : [ @sequence::Stntuple.gen_g4_time_map,
					   @sequence::Stntuple.digis          ,
					   @sequence::Stntuple.cal_reco       ,
					   @sequence::Stntuple.dem_reco       ,
					   @sequence::Stntuple.dmm_reco       ,
					   @sequence::Stntuple.umm_reco       ,
					   @sequence::Stntuple.stnmaker
					  ]
#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
    path_mix_digi_calo_apr_stn : [ @sequence::Stntuple.mix_time_map   , 
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       , 
				   @sequence::Stntuple.tpr_reco       ,
				   @sequence::Stntuple.cpr_reco       ,
				   @sequence::Stntuple.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]


#------------------------------------------------------------------------------
# run all 8 reconstruction passes
#------------------------------------------------------------------------------
    path_gen_digi_all_reco_ump : [ @sequence::Stntuple.gen_g4_time_map,
				   @sequence::Stntuple.digis          ,
				   @sequence::Stntuple.cal_reco       ,
				   @sequence::Stntuple.dem_reco       ,
				   @sequence::Stntuple.dmm_reco       ,
				   @sequence::Stntuple.dep_reco       ,
				   @sequence::Stntuple.dmp_reco       ,
				   @sequence::Stntuple.uem_reco       ,
				   @sequence::Stntuple.umm_reco       ,
				   @sequence::Stntuple.uep_reco       ,
				   @sequence::Stntuple.ump_reco       ,
				   @sequence::Stntuple.stnmaker_all
				  ]
}


producers: { 
    @table::CalPatRec.producers 
    @table::Stntuple.producers 
}

physics : {
    producers: { 
	@table::CalPatRec.producers 
	@table::Stntuple.producers 
    }

    filters  : { @table::Stntuple.filters   }
#------------------------------------------------------------------------------
# paths
# ------
# MakeStereoHits also produces the StrawHitPosition collection
#	   , dioMixer, protonMixer, neutronMixer, photonMixer, ootMixer, flashMixer
#------------------------------------------------------------------------------
    event_filter   : [ EventFilter ]

    gen_hits       : [ @sequence::gen_hits_seq ]

    mc             : [ @sequence::gen_hits_seq, @sequence::calRecoSeq ]
#
    allpatrec_reco              : [ @sequence::calRecoSeq, @sequence::allPatRecSeq ]
    trkpatrec_reco              : [ @sequence::calRecoSeq, @sequence::trkPatRecSeq ]
    calpatrec_reco              : [ @sequence::calRecoSeq, @sequence::calPatRecSeq ]
#
    allpatrec_reco_stnmaker     : [ @sequence::calRecoSeq, @sequence::allPatRecSeq, @sequence::pidSeq, @sequence::stnmaker_seq ]
    trkpatrec_reco_stnmaker     : [ @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::pidSeq, @sequence::stnmaker_seq ]
    calpatrec_reco_stnmaker     : [ @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::pidSeq, @sequence::stnmaker_seq ]
#------------------------------------------------------------------------------
# only electron reconstruction turned on
#------------------------------------------------------------------------------
    gen_trkpatrec_reco_stnmaker : [ @sequence::gen_hits_seq ,
				    @sequence::calRecoSeq  , @sequence::trkPatRecSeq,
				    @sequence::vadimPidSeq , @sequence::stnmaker_seq  ]

    gen_calpatrec_reco_stnmaker : [ @sequence::generatorSeq, @sequence::hitMakerSeq ,
				    @sequence::calRecoSeq  , @sequence::calPatRecSeq, 
				    @sequence::vadimPidSeq , @sequence::stnmaker_seq  ]

    gen_allpatrec_reco_stnmaker    : [ @sequence::generatorSeq, @sequence::hitMakerSeq ,
				       @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				       @sequence::vadimPidSeq , @sequence::stnmaker_seq ]

    gen_allpatrec_digi_stnmaker    : [ @sequence::generatorSeq, @sequence::digiMakerSeq ,
				       @sequence::calRecoSeq  , @sequence::allPatRecSeq, @sequence::vadimPidSeq, 
				       @sequence::stnmaker_seq  ]
#------------------------------------------------------------------------------
# same with mixed background 
#------------------------------------------------------------------------------
    genmix_allpatrec_reco_stnmaker : [ @sequence::gen_mix_seq   , @sequence::hitMakerSeq ,
				       @sequence::calRecoSeq  , @sequence::allPatRecSeq,
				       @sequence::vadimPidSeq , @sequence::stnmaker_seq ]
#------------------------------------------------------------------------------
# AvikPID requires both electron and muon reconstruction sequences
#------------------------------------------------------------------------------
    allpatrec_dem_reco_stnmaker : [ @sequence::allpatrec_dem_reco_stnmaker_seq ]
    calpatrec_dem_reco_stnmaker : [ @sequence::calpatrec_dem_reco_stnmaker_seq ]
    trkpatrec_dem_reco_stnmaker : [ @sequence::trkpatrec_dem_reco_stnmaker_seq ]

    allpatrec_dem_dmm_reco_stnmaker : [ @sequence::allpatrec_dem_dmm_reco_stnmaker_seq ]
    calpatrec_dem_dmm_reco_stnmaker : [ @sequence::calpatrec_dem_dmm_reco_stnmaker_seq ]
    trkpatrec_dem_dmm_reco_stnmaker : [ @sequence::trkpatrec_dem_dmm_reco_stnmaker_seq ]

    gen_allpatrec_dem_dmm_reco_stnmaker : [ @sequence::gen_hits_seq, 
					    @sequence::allpatrec_dem_dmm_reco_stnmaker_seq ]

    genmix_allpatrec_dem_dmm_reco_stnmaker : [ @sequence::gen_mix_seq , @sequence::hitMakerSeq       ,
					       @sequence::calRecoSeq, @sequence::allPatRecDemDmmSeq,
					       @sequence::avikPidSeq, @sequence::stnmaker_seq        ]
#------------------------------------------------------------------------------
# event display paths
#------------------------------------------------------------------------------
    allpatrec_reco_display      : [ @sequence::calRecoSeq, @sequence::allPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]
    calpatrec_reco_display      : [ @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]
    trkpatrec_reco_display      : [ @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]

    dem_reco_display            : [ @sequence::calRecoSeq, 
				    @sequence::allPatRecSeq,
				    @sequence::vadimPidSeq, 
				    MuHitDisplay ]

    hit_reco_display_dem        : [ @sequence::timeMapSeq, 
				    @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, 
				    @sequence::allPatRecSeq,
				    @sequence::vadimPidSeq, 
				    MuHitDisplay ]

    digi_reco_display_dem       : [ @sequence::digiMakerSeq ,
				    @sequence::calRecoSeq, 
				    @sequence::allPatRecSeq,
				    @sequence::vadimPidSeq, 
				    MuHitDisplay ]
#
    gen_allpatrec_reco_display  : [ @sequence::generatorSeq, @sequence::hitMakerSeq ,
				    @sequence::calRecoSeq  , @sequence::allPatRecSeq, @sequence::vadimPidSeq, 
#				    @sequence::stnmaker_seq , 
				    MuHitDisplay ]

    gen_allpatrec_digi_display  : [ @sequence::generatorSeq, @sequence::digiMakerSeq ,
				    @sequence::calRecoSeq  , @sequence::allPatRecSeq, @sequence::vadimPidSeq, 
				    @sequence::stnmaker_seq , MuHitDisplay ]

    gen_calpatrec_reco_display  : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]

    gen_trkpatrec_reco_display  : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]

    gen_allpatrec_dem_dmm_reco_display : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
					   @sequence::calRecoSeq, @sequence::allPatRecDemDmmSeq,
					   @sequence::avikPidSeq, MuHitDisplay ]

#------------------------------------------------------------------------------
    trigger_paths  : [ ]
    #    out : [detectorOutput]
    out            : []
    end_paths      : [out]
}

outputs: {
    detectorOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [] }
        outputCommands:   [ "keep *_*_*_*",
                            "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*"
			   ]
#        fileName      : "generate_mix_mergePatRec_stnmaker.root"
    }
}
#------------------------------------------------------------------------------
# redefinitions
#------------------------------------------------------------------------------
