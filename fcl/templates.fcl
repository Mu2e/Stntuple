# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# defines templates
#------------------------------------------------------------------------------
BEGIN_PROLOG
#------------------------------------------------------------------------------
# definitions of sequences do not require elements to be defined
#------------------------------------------------------------------------------
  generatorSeq  : [ generate, g4run, detectorFilter, protonTimeMap, muonTimeMap ]

  hitMakerSeq   : [ MakeCaloReadoutHits, MakeCaloCrystalHits, makeSD, makeSH ]

# MC generator and hit makers
  genHitsSeq    : [ @sequence::generatorSeq, @sequence::hitMakerSeq ]

# calorimeter cluster reconstruction
  calRecoSeq    : [ MakeCaloProtoCluster, MakeCaloCluster ]

# hit pre-making for TrkPatRec; FSHPreStereo is needed to flag straw hits
  tprMakeHitSeq : [ FSHPreStereo, MakeStereoHits, FlagStrawHits, FlagBkgHits ]

# CalPatRec
  cprMakeHitSeq : [ CalPatRecFSHP, CalPatRecMakeStrawHitPositions, CalPatRecMakeStereoHits,  
		    CalPatRecFlagStrawHits, CalPatRecFlagBkgHits ]

  trkPatRecSeq  : [ @sequence::tprMakeHitSeq, TrkPatRec, MergePatRec ]

  calPatRecSeq  : [ @sequence::cprMakeHitSeq, CalPatRec, MergePatRec ]

  allPatRecSeq  : [ @sequence::tprMakeHitSeq, TrkPatRec, @sequence::cprMakeHitSeq, CalPatRec, MergePatRec ]

  vadimPidSeq   : [ TrkExtrapol, CaloMatching, ParticleID ]

# event for the downstream particles, avikPID requires running both electron and muon track reconstruction 

# hit making - just once, but two modules

  trkPatRecDemDmmSeq  : [ @sequence::tprMakeHitSeq, TrkPatRecDem, TrkPatRecDmm, MergePatRecDem, MergePatRecDmm ]

  calPatRecDemDmmSeq  : [ @sequence::cprMakeHitSeq, CalPatRecDem, CalPatRecDmm, MergePatRecDem, MergePatRecDmm ]

  allPatRecDemSeq     : [ @sequence::tprMakeHitSeq, TrkPatRecDem, @sequence::cprMakeHitSeq, CalPatRecDem, MergePatRecDem ]
  allPatRecDmmSeq     : [ @sequence::tprMakeHitSeq, TrkPatRecDmm, @sequence::cprMakeHitSeq, CalPatRecDmm, MergePatRecDmm ]

  allPatRecDemDmmSeq  : [ @sequence::tprMakeHitSeq, TrkPatRecDem, TrkPatRecDmm, 
			  @sequence::cprMakeHitSeq, CalPatRecDem, CalPatRecDmm, 
			  MergePatRecDem, MergePatRecDmm ]

# AvikPID on input takes MergePatRecDem and MergePatRecDmm
  avikPidSeq    : [ TrkExtrapolDem, TrkExtrapolDmm, CaloMatchingDem, CaloMatchingDmm, AvikPID ]

  stnmakerSeq   : [ InitStntuple, StntupleMaker, FillStntuple ]

  pidSeq        : [ @sequence::avikPidSeq ]
END_PROLOG

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"
#include "Stntuple/fcl/prolog.fcl"

#------------------------------------------------------------------------------
# input module definition
#------------------------------------------------------------------------------
source : { 
    # module_type : EmptyEvent
        module_type : RootInput
    #    fileNames   : [ {INPUT_DATA_FILE} ]
    #    fileNames : ["/mu2e/data/tdr/beam/g4s4p5/tdr.beam.g4s4.conversion.1504a.15729672/good/00000/dsStopsToHitsConversion.root"]
    #    maxEvents   : 100
    
    inputCommands : ['keep *_*_*_*'
    #		     , 'drop *_muonTimeMap_*_*'
    #		     , 'drop *_protonTimeMap_*_*'
    #		     , 'drop mu2eStrawDigis_*_*_*'
    #		     , 'drop mu2eStrawHits_*_*_*'
    #		     , 'drop *_CaloReadoutHitsMaker_*_*'
    #		     , 'drop *_CaloCrystalHitsMaker_*_*'
    # Uncomment the above lines to reduce file size.
		    ]  
}
#------------------------------------------------------------------------------
# services section
#------------------------------------------------------------------------------
services : {
    message               : @local::default_message
    TFileService          : { fileName : "Stntuple_fcl_templates_fcl.hist" }
    RandomNumberGenerator : { }
    #   Timing                : { }fcl/

    user : {
        GeometryService        : { inputFile      : "JobConfig/TDR/geom_MothersToHits.txt" }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"        }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"   }
        BTrkHelper             : @local::BTrkHelperDefault
        G4Helper               : { }
        SeedService            : { @table::automaticSeeds
	    baseSeed         :  0
	    maxUniqueEngines :  20
	}
    }
}
services.scheduler.wantSummary: true
#------------------------------------------------------------------------------
# reconstruction and analysis modules
#------------------------------------------------------------------------------
physics : {
    producers: {
        generate             : { @table::StoppedMuonConversionGun }
	g4run                : @local::g4run
#------------------------------------------------------------------------------
# hit makers
#------------------------------------------------------------------------------
        protonTimeMap        : { @table::protonTimeMap }
        muonTimeMap          : { @table::muonTimeMap }
        makeSD               : @local::makeSD
        makeSH               : @local::makeSHfromSD
	MakeCaloReadoutHits  : @local::MakeCaloReadoutHits
	MakeCaloCrystalHits  : @local::MakeCaloCrystalHitsNew
#------------------------------------------------------------------------------
#  default tracking
#------------------------------------------------------------------------------
	FSHPreStereo         : @local::FSHPreStereo
	MakeStereoHits       : @local::MakeStereoHits
	FlagStrawHits        : @local::FlagStrawHits
	FlagBkgHits          : @local::FlagBkgHits
	TrkPatRec            : { @table::TrkPatRecDownstreameMinus  }
	TrkPatRecDem         : { @table::TrkPatRecDownstreameMinus  }
	TrkPatRecDmm         : { @table::TrkPatRecDownstreammuMinus }
#------------------------------------------------------------------------------
# CalPatRec modules
#------------------------------------------------------------------------------
	MakeCaloProtoCluster            : @local::MakeCaloProtoCluster
	MakeCaloCluster                 : @local::MakeCaloCluster

	CalPatRecFSHP                   : @local::CalPatRecFSHP
	CalPatRecMakeStrawHitPositions  : @local::CalPatRecMakeStrawHitPositions
	CalPatRecMakeStereoHits         : @local::CalPatRecMakeStereoHits
	CalPatRecFlagStrawHits          : @local::CalPatRecFlagStrawHits
	CalPatRecFlagBkgHits            : @local::CalPatRecFlagBkgHits
	CalPatRec                       : { @table::CalPatRec }
	CalPatRecDem                    : { @table::CalPatRecDem }
	CalPatRecDmm                    : { @table::CalPatRecDmm }

	MergePatRec                     : @local::MergePatRec
	MergePatRecDem                  : @local::MergePatRecDem
	MergePatRecDmm                  : @local::MergePatRecDmm
#------------------------------------------------------------------------------
# higher-level reconstruction
# ParticleID, AvikPID - tracker-only particle ID
# TrackCaloMatching doesn't explicitly know anything about the particle mass, 
# it is just using the extrapolation results 
#------------------------------------------------------------------------------
	TrkExtrapol          : { @table::TrackCaloIntersection  
	    fitterModuleLabel : MergePatRec 
	}
	TrkExtrapolDem       : { @table::TrackCaloIntersection
	    fitparticle       : 11
	    fitterModuleLabel : MergePatRecDem 
	}
	TrkExtrapolDmm       : { @table::TrackCaloIntersection
	    fitparticle       : 13
	    fitterModuleLabel : MergePatRecDmm 
	}

	CaloMatching         : { @table::TrackCaloMatching 
	    fitterModuleLabel : MergePatRec 
	}

	CaloMatchingDem      : { @table::TrackCaloMatching 
	    fitparticle                  : 11
	    fitdirection                 : 0
	    fitterModuleLabel            : MergePatRecDem
	    trkToCaloExtrapolModuleLabel : TrkExtrapolDem
	}

	CaloMatchingDmm      : { @table::TrackCaloMatching 
	    fitparticle                  : 13
	    fitdirection                 : 0
	    fitterModuleLabel            : MergePatRecDmm 
	    trkToCaloExtrapolModuleLabel : TrkExtrapolDmm
	}

	ParticleID           : { @table::ParticleID        fitterModuleLabel : MergePatRec }

	AvikPID              : { @table::AvikPID           
	    trkPatRecDemModuleLabel : MergePatRecDem 
	    trkPatRecDmmModuleLabel : MergePatRecDmm 
	}
    }

    filters: {
#------------------------------------------------------------------------------
# Stntuple maker sequence
# store DEM, but 
#------------------------------------------------------------------------------
	InitStntuple   : @local::InitStntuple 
	StntupleMaker  : { @table::StntupleMaker
	    trackBlockName          : [ "TrackBlock"     , "TrackBlockDmm"   ] 
	    trkRecoModuleLabel      : [ "MergePatRecDem" , "MergePatRecDmm"  ]
	    trkExtrapolModuleLabel  : [ "TrkExtrapolDem" , "TrkExtrapolDmm"  ]
	    trkCaloMatchModuleLabel : [ "CaloMatchingDem", "CaloMatchingDmm" ]
	    pidModuleLabel          : [         "AvikPID",         "AvikPID" ]
	    fitParticle             : [                11,                13 ]
	    fitDirection            : [                 0,                 0 ]
	}
	FillStntuple   : @local::FillStntuple
#------------------------------------------------------------------------------
# Andrej's filter
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
	detectorFilter : @local::FilterStepPointMomentum
	EventFilter    : @local::EventFilter
#------------------------------------------------------------------------------
# event display
#------------------------------------------------------------------------------
	MuHitDisplay   : { @table::MuHitDisplay }
    }
#------------------------------------------------------------------------------
# paths
# ------
# MakeStereoHits also produces the StrawHitPosition collection
#	   , dioMixer, protonMixer, neutronMixer, photonMixer, ootMixer, flashMixer
#------------------------------------------------------------------------------
    event_filter   : [ EventFilter ]
    mc             : [ @sequence::generatorSeq, @sequence::hitMakerSeq,  @sequence::calRecoSeq, EventFilter ]
    gen_hits       : [ @sequence::generatorSeq, @sequence::hitMakerSeq ]
#
    reco_allpatrec              : [ @sequence::calRecoSeq, @sequence::allPatRecSeq, @sequence::vadimPidSeq, EventFilter ]
    reco_trkpatrec              : [ @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::vadimPidSeq, EventFilter ]
    reco_calpatrec              : [ @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::vadimPidSeq, EventFilter ]
#
    allpatrec_reco_stnmaker     : [ @sequence::calRecoSeq, @sequence::allPatRecSeq, @sequence::pidSeq, @sequence::stnmakerSeq, EventFilter ]
    trkpatrec_reco_stnmaker     : [ @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::pidSeq, @sequence::stnmakerSeq, EventFilter ]
    calpatrec_reco_stnmaker     : [ @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::pidSeq, @sequence::stnmakerSeq, EventFilter ]
#------------------------------------------------------------------------------
    gen_allpatrec_reco_stnmaker : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::allPatRecSeq,
				    @sequence::vadimPidSeq, @sequence::stnmakerSeq, EventFilter]

    gen_trkpatrec_reco_stnmaker : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::trkPatRecSeq,
				    @sequence::vadimPidSeq, @sequence::stnmakerSeq, EventFilter ]

    gen_calpatrec_reco_stnmaker : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::calPatRecSeq, 
				    @sequence::vadimPidSeq, @sequence::stnmakerSeq, EventFilter ]

# AvikPID requires both electron and muon reconstruction sequences

    gen_allpatrec_dem_dmm_reco_stnmaker : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
					    @sequence::calRecoSeq, @sequence::allPatRecDemDmmSeq,
					    @sequence::avikPidSeq, @sequence::stnmakerSeq, EventFilter ]
#------------------------------------------------------------------------------
# event display paths
#------------------------------------------------------------------------------
    allpatrec_reco_display      : [ @sequence::calRecoSeq, @sequence::allPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]
    calpatrec_reco_display      : [ @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]
    trkpatrec_reco_display      : [ @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]
#
    gen_allpatrec_reco_display  : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::allPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]

    gen_calpatrec_reco_display  : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::calPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]

    gen_trkpatrec_reco_display  : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
				    @sequence::calRecoSeq, @sequence::trkPatRecSeq, @sequence::vadimPidSeq, MuHitDisplay ]

    gen_allpatrec_dem_dmm_reco_display : [ @sequence::generatorSeq, @sequence::hitMakerSeq,
					    @sequence::calRecoSeq, @sequence::allPatRecDemDmmSeq,
					    @sequence::avikPidSeq, MuHitDisplay ]

#------------------------------------------------------------------------------
    trigger_paths  : [ ]
    #    out : [detectorOutput]
    out            : []
    end_paths      : [out]
}

outputs: {
    detectorOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [] }
        outputCommands:   [ "keep *_*_*_*",
                            "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*"
			   ]
#        fileName      : "generate_mix_mergePatRec_stnmaker.root"
    }
}
#------------------------------------------------------------------------------
# redefinitions
#------------------------------------------------------------------------------
