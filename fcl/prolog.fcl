# -*- mode: tcl -*-
BEGIN_PROLOG
#------------------------------------------------------------------------------
# Stntuple maker sequence
#------------------------------------------------------------------------------
InitStntuple : { 
    module_type       : InitStntuple
    module_name       : InitStntuple
	    
    histFileName      : "default.stn"
    splitLevel        : 0
	    
    debugBits         : { 
	# bit0:1  
	# bit1:1 
	# bit51:1
    }
}
#------------------------------------------------------------------------------
# default configuration of StntupleMaker
#------------------------------------------------------------------------------
StntupleMaker : { 
    module_type         : StntupleMaker
    module_name         : StntupleMaker
    processName         : undefined
#------------------------------------------------------------------------------
# define which branches to fill by default
#------------------------------------------------------------------------------    
    makeCalData         : 0
    makeClusters        : 1
    makeGenp            : 1
    makePid             : 0
    makeSimp            : 1
    makeStrawData       : 0
    makeTracks          : 1
    makeTrigger         : 0
    makeTrackSeeds      : 0
    makeVirtualHits     : 1
	    
    TimeOffsets          : { inputs : [ "protonTimeMap", "muonTimeMap" ] }

    KalDiag              : { @table::TrkPatRec.KalDiag    }
    DoubletAmbigResolver : { @table::DoubletAmbigResolver }

    g4ModuleLabel        : "g4run"
    caloCrystalHitsMaker : "CaloCrystalHitsMaker"
    caloClusterMaker     : "MakeCaloCluster"
#------------------------------------------------------------------------------
# sometimes may need to store multiple track blocks, thus - vectors
# by default, always run MergePatRec, which, in case only one track reconstruction
# module is running upstream, simply copies its output
#------------------------------------------------------------------------------
    makeStrawHitModuleLabel : "makeSH"
    generatorModuleLabel    : "generate"
    trackSeedMaker          : "CalPatRecNew"

    trackBlockName          : [ "TrackBlock"   ]
    trkRecoModuleLabel      : [ "MergePatRec"  ]
    trkExtrapolModuleLabel  : [ "TrkExtrapol"  ]
    trkCaloMatchModuleLabel : [ "CaloMatching" ]
    pidModuleLabel          : [ "ParticleID"   ]
#    pidModuleLabel          : [ "AvikPID"      ]
    fitParticle             : [             11 ] # 11:electron  , 13:muon etc
    fitDirection            : [              0 ] #  0:downstream,  1:upstream

    trkExtrapol          : TrkExtrapol
    trkCalMatch          : CaloMatching
    pidDem               : ParticleID

    minTActive          : 0.     # ns
    minECrystal         : 1.0    # MeV

    debugBits           : { 
	# bit0:1  
	# bit1:1 
	# bit51:1
    }
}
#------------------------------------------------------------------------------
# downstream electrons - explicitly - the same as default
#------------------------------------------------------------------------------
StntupleMakerDem  : { @table::StntupleMaker
    makePid                 : 0
    trackBlockName          : [ "TrackBlock"      ] 
    trkRecoModuleLabel      : [ "MergePatRecDem"  ]
    trkExtrapolModuleLabel  : [ "TrkExtrapolDem"  ]
    trkCaloMatchModuleLabel : [ "CaloMatchingDem" ]
    pidModuleLabel          : [         "AvikPID" ]
    fitParticle             : [                11 ]
    fitDirection            : [                 0 ]
}
#------------------------------------------------------------------------------
# downstream muons - explicitly 
#------------------------------------------------------------------------------
StntupleMakerDmm  : { @table::StntupleMaker
    makePid                 : 0
    trackBlockName          : [ "TrackBlock"      ] 
    trkRecoModuleLabel      : [ "MergePatRecDmm"  ]
    trkExtrapolModuleLabel  : [ "TrkExtrapolDmm"  ]
    trkCaloMatchModuleLabel : [ "CaloMatchingDmm" ]
    pidModuleLabel          : [         "AvikPID" ]
    fitParticle             : [                13 ]
    fitDirection            : [                 0 ]
}
#------------------------------------------------------------------------------
# explicitly store 2 versions of track reco - downstream electrons and muons
#------------------------------------------------------------------------------
StntupleMakerDemDmm  : { @table::StntupleMaker
    makePid                 : 1
    trackBlockName          : [ "TrackBlock"     , "TrackBlockDmm"   ] 
    trkRecoModuleLabel      : [ "MergePatRecDem" , "MergePatRecDmm"  ]
    trkExtrapolModuleLabel  : [ "TrkExtrapolDem" , "TrkExtrapolDmm"  ]
    trkCaloMatchModuleLabel : [ "CaloMatchingDem", "CaloMatchingDmm" ]
    pidModuleLabel          : [         "AvikPID",         "AvikPID" ]
    fitParticle             : [                11,                13 ]
    fitDirection            : [                 0,                 0 ]
}
#------------------------------------------------------------------------------
# track reconstruction studies: 
# make 3 track blocks, for the moment need to specify all other labels
# default (in prolog): just one track block "TrackBlock" with output of MergePatRec
#------------------------------------------------------------------------------
StntupleMaker3 : { @table::StntupleMaker
    trackBlockName          : [ "TrackBlock"   , "TrkPatRec"           , "CalPatRec" ]
    trkRecoModuleLabel      : [ "MergePatRec"  , "TRFDownstreameMinus" , "CalPatRec" ]
    trkExtrapolModuleLabel  : [ "TrkExtrapol"  ,                    "" ,          "" ]
    trkCaloMatchModuleLabel : [ "CaloMatching" ,                    "" ,          "" ]
    pidModuleLabel          : [ "AvikPID"      ,                    "" ,          "" ]
    fitParticle             : [              11,                     11,          11 ]
    fitDirection            : [               0,                      0,           0 ]

    makePid                 : 0
}

FillStntuple : { 
    module_type       : FillStntuple
    module_name       : FillStntuple
    
    debugBits         : { 
	# bit0:1  
	# bit1:1 
	# bit51:1
    }
}
#------------------------------------------------------------------------------
# 
#------------------------------------------------------------------------------
MuHitDisplay: {
    module_type                  : MuHitDisplay # the class name
    debugBits                    : { }          # need for TAnaModule
    interactiveMode              : 1

    crvRecoPulsesModuleLabel     : CrvRecoPulses
    showCRVOnly 		 : false
    showTracks                   : true

    generatorModuleLabel         : generate
    g4ModuleLabel                : g4run
    strawHitMakerModuleLabel     : makeSH
    strawHitPosMakerModuleLabel  : CalPatRecMakeStrawHitPositions
    strawHitFlagMakerModuleLabel : CalPatRecFlagStrawHits
    
    caloCrystalHitsMaker         : MakeCaloCrystalHits
    caloClusterModuleLabel       : MakeCaloCluster
    trkRecoModuleLabel           : MergePatRec
    trkExtrapol                  : TrkExtrapol
    trkCalMatch                  : CaloMatching

    fitParticle                  : 11  # 11:electron
    fitDirection                 : 0   # 0:downstream, 1:upstream

    pidModuleLabel               : ParticleID
	
    # if set to true, all hits will be displayed unconditionally
    # otherwise, display only hits with right flags
    displayBackgroundHits        : true
    useStereoHits                : false

    #      goodHitMask                 : ["EnergySelection","RadiusSelection","TimeSelection"]
    goodHitMask                  : ["EnergySelection", "RadiusSelection"]
    badHitMask                   : ["DeltaRay", "Isolated"]
	
    trackerStepPoints            : tracker
    minHits                      : 5
    clickToAdvance               : true
    printHits                    : false
    timeWindow                   : 100000.
    #      timeWindow           : 50.
#------------------------------------------------------------------------------
# kalDiag and Doublet Resolver
#------------------------------------------------------------------------------
    KalDiag                 : { @table::TrkPatRec.KalDiag    }
    DoubletAmbigResolver    : { @table::DoubletAmbigResolver }
#------------------------------------------------------------------------------
# configuration of the underlying visualization manager 
#------------------------------------------------------------------------------
    visManager: {
	debugLevel         : 0
	displayStrawDigiMC : 1
    }
}
#------------------------------------------------------------------------------
# event list contains 3 numbers per event : run, subrun, event
# if the event list is empty, all events are passed through
#------------------------------------------------------------------------------
EventFilter: {
    module_type                  : EventFilter
    printFreq                    : 1000000
    eventList                    : []  # [ run1, subrun1, event1, ...]
}

END_PROLOG
