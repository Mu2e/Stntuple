# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# this example shows how to configure a job to 
#
# - generate conversion electron events 
# - run simulation+reconstruction chain
# - run particle ID
# - make an ntuple
# 
# local submission: 
#
#  mu2e -c Analyses/test/genReco.fcl -n 1000 >| results/2014-12-19-Analyses_test_genReco.log &
#------------------------------------------------------------------------------
#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

#include "Stntuple/fcl/prolog.fcl"

process_name : generateTrkPatRecStnmaker

#------------------------------------------------------------------------------
# define input module
#------------------------------------------------------------------------------
source : {  
    module_type : EmptyEvent
#    module_type : RootInput
#    fileNames   : [ "INPUT_DATA_FILE" ]
    maxEvents   : 100

    inputCommands : ['keep *_*_*_*'
#                   , 'drop mu2eStrawDigis_*_*_*'
#                   , 'drop mu2eStrawHits_*_*_*'
# Uncomment the above line to reduce file size.
		     ]  
}

services : {

    message               : @local::default_message
    TFileService          : { fileName : "calPatRec_stnmaker.hist" }
    RandomNumberGenerator : { }
#    Timing                : { }   # this prints per-event summaries

    user : {
        GeometryService        : { inputFile      : "JobConfig/TDR/geom_MothersToHits.txt" }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"        }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"   }
        G4Helper               : { }
        SeedService            : { @table::automaticSeeds
	    baseSeed         :  0
	    maxUniqueEngines : 20
	}
    }
}
services.scheduler.wantSummary: true
#------------------------------------------------------------------------------
# redefinitions
#------------------------------------------------------------------------------
physics : {
    producers: {
#        generate             : @local::StoppedMuonConversionGun
        generate             : @local::StoppedParticleReactionGun
        g4run                : @local::g4run
        compressPVDetector   : @local::CompressPhysicalVolumes
        protonTimeMap        : @local::protonTimeMap
        muonTimeMap          : @local::muonTimeMap
#------------------------------------------------------------------------------
# tracker digitization, detector hit makers, default tracking (TrkPatRec)
#------------------------------------------------------------------------------
        makeSD               : @local::makeSD
        makeSH               : @local::makeSHfromSD
	FSHPreStereo         : @local::FSHPreStereo
	MakeStereoHits       : @local::MakeStereoHits
	FlagStrawHits        : @local::FlagStrawHits
	FlagBkgHits          : @local::FlagBkgHits
	TrkPatRec            : { @table::TrkPatRecDownstreameMinus 
#	    diagLevel:10
	}
#------------------------------------------------------------------------------
# calorimeter digitization and reconstruction
#------------------------------------------------------------------------------
	MakeCaloReadoutHits  : { @table::MakeCaloReadoutHits }
	CaloCrystalHitsMaker : { @table::MakeCaloCrystalHitsNew }
	MakeCaloCluster      : { @table::MakeCaloCluster }
#------------------------------------------------------------------------------
# CalPatRec modules
#------------------------------------------------------------------------------
	CalPatRecFSHP                   : @local::CalPatRecFSHP
	CalPatRecMakeStrawHitPositions  : @local::CalPatRecMakeStrawHitPositions
	CalPatRecMakeStereoHits         : @local::CalPatRecMakeStereoHits
	CalPatRecFlagStrawHits          : @local::CalPatRecFlagStrawHits
	CalPatRecFlagBkgHits            : @local::CalPatRecFlagBkgHits
	CalPatRec                       : { @table::CalPatRec
	    diagLevel   : 1
	    debugLevel  : 0
	    HelixFitHack: { @table::CalPatRec.HelixFitHack 
		debugLevel : 0 
	    }
	    SeedFitHack: { @table::CalPatRec.SeedFitHack 
		debugLevel : 0
	    }
	    KalFitHack  : { @table::CalPatRec.KalFitHack   
		debugLevel : 0
	    }
	}
#------------------------------------------------------------------------------
# merge output of the tracking algorithms
#------------------------------------------------------------------------------
	MergePatRec                     : @local::MergePatRec
#------------------------------------------------------------------------------
# needed for analysis
#------------------------------------------------------------------------------
	CaloMatching: { @table::TrackCaloMatching fitterModuleLabel : MergePatRec }
	TrkExtrapol : { @table::TrkExtrapol       fitterModuleLabel : MergePatRec }
	ParticleID  : { @table::ParticleID        fitterModuleLabel : MergePatRec }
    }

    filters: {
#------------------------------------------------------------------------------
# Stntuple maker sequence
#------------------------------------------------------------------------------
	InitStntuple         : { @table::InitStntuple 
	    histFileName   : "calPatRec_stnmaker.stn"
	}

	StntupleMaker        : { @table::StntupleMaker
	    g4ModuleLabel        : "g4run"
	    #------------------------------------------------------------------------------
	    #  3 track blocks, for the moment need to specify all other labels
	    #------------------------------------------------------------------------------
	    # trackBlockName          : [ "TrackBlock" , "TrkPatRec" , "CalPatRec" ] 
	    # trkRecoModuleLabel      : [ "MergePatRec", "TrkPatRec" , "CalPatRec" ]
	    # trkExtrapolModuleLabel  : [ "TrkExtrapol",          "" ,          "" ]
	    # trkCaloMatchModuleLabel : [            "",          "" ,          "" ]
	    # pidModuleLabel          : [            "",          "" ,          "" ]
	    # fitParticle             : [            11,           11,          11 ]
	    # fitDirection            : [             0,            0,           0 ]
#
	    # makeCalData         : 1
	    # makeStrawData       : 1
	}

	FillStntuple         : @local::FillStntuple
#------------------------------------------------------------------------------
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
        detectorFilter       : @local::FilterStepPointMomentum
    }

    analyzers: {
	genCountLogger: {
	    module_type: GenEventCountReader
	}
	gpa: {
	    module_type: GenParticlesAnalyzer
	    inputs: generate
	}
    }
#------------------------------------------------------------------------------
# paths
#------------------------------------------------------------------------------
    detPath : [ 
	       generate, g4run 
	       , detectorFilter 
	       , protonTimeMap, muonTimeMap
	       , makeSD, makeSH
	       , MakeCaloReadoutHits, CaloCrystalHitsMaker

	       , MakeCaloCluster

#	       , FSHPreStereo, MakeStereoHits, FlagStrawHits, FlagBkgHits, TrkPatRec

	       , CalPatRecFSHP, CalPatRecMakeStereoHits 
	       , CalPatRecFlagStrawHits, CalPatRecFlagBkgHits 
	       , CalPatRec

	       , MergePatRec

	       , TrkExtrapol, CaloMatching, ParticleID
	       , InitStntuple, StntupleMaker, FillStntuple
	      ]
    trigger_paths  : [detPath]
    
    out : [detectorOutput]
#    out : []
    an  : [genCountLogger, gpa]

    end_paths      : [out]
}
#------------------------------------------------------------------------------
# configure output module
#------------------------------------------------------------------------------
outputs: {
    detectorOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [detPath] }
        outputCommands:   [ "keep *_*_*_*",
                            "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*"
                          ]
        fileName    : "calPatRec_stnmaker.art"
    }
}
